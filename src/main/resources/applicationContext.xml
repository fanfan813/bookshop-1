<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="false">
	   <context:property-placeholder ignore-unresolvable="true" location="classpath*:/db.properties"/>
	   <tx:annotation-driven/>
	   <context:annotation-config />
	   <context:component-scan base-package="com.book">
	   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	   </context:component-scan>
	   <!-- 用c3p0连接池配置数据源 -->
	   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	   		<property name="driverClass" value="${db.driver}"/>
	   		<property name="jdbcUrl" value="${db.url}"/>
	   		<property name="user" value="${db.username}"/>
	   		<property name="password" value="${db.password}"/>
	   </bean>
	   <!-- 配置mybatis的mapper.xml文件位置 -->
	   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   		<property name="dataSource" ref="dataSource" />
	   		<property name="mapperLocations" value="classpath*:sqlmapper/*Mapper.xml" />
	   </bean>
	   <!-- 自动装配Mybatis的dao接口 -->
	   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.book.dao" />
		</bean>
		<!-- spring的jdbc事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		</bean>  
		<!-- 继承自AuthorizingRealm的自定义Realm,指定shiro验证登录的自定义类	-->
		<bean id="realm" class="com.book.security.Realm"/>
	    <!-- 缓存管理器 使用Ehcache实现-->  
   		 <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <!-- 缓存配置文件的存放地址 -->
       		 <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>  
    	</bean>   
		<!-- shiro安全管理器-->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="realm" />
			<property name="cacheManager" ref="cacheManager" />
		</bean>
		<!-- shiro主过滤器		 -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		  <property name="loginUrl" value="/login" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth" />
		<property name="filters">
			<map>
			</map>
		</property>
		<!-- 访问地址的过滤规则,从上至下的优先级,如果有匹配的规则,就会返回,不会再进行匹配 -->
		<property name="filterChainDefinitions">
			<value> 
				/login = anon
				/validate_code/**=anon
				/*/admin/**=authc
				/api/** = anon
				/ace/** = anon
				/images/** = anon
				/js/** = anon
				/css/** = anon
				/cart/* = authc
				/order/* = authc
				/address/* = authc
				/user/list = authc
				/user/getPager = authc
				/user/admin/* = authc
			</value>
		</property>
	</bean>
     <!-- Shiro生命周期处理器-->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
</beans>